-> Bir başlık dosyasının ikinci kez include edilmesi bazı sakıncalar oluşturur.

-> multiple inclusion (çoklu dahil etme)
----------------------------------------
-> Öyle bildirimler var ki derleyici birden fazla kez gördüğünde dilin kuralları çiğnenmiş oluyor. (structure declaration (yapı bildirimleri))
-> Derleyici, özdeşte olsa bir yapı bildirimini birden fazla kez görürse syntax hatası oluşur.

-> multiple inclusion guar (çoklu dahil etmeye karşı koruma)
------------------------------------------------------------
-> Bu önlem kullanılırsa, artık hiçbir şekilde önişlemci program sizin başlık dosyanızın içine ikinci kez girmeyecek.

#ifndef  ALI_H
#define  ALI_H
//code
#endif
-> "." makrolarda kullanılmadığı için "_" kullanılır.
-> Bu şekilde koruma yapılarak ön işlemci komutu bu başlık dosyası içeriğine 1 kez erişir.


#pragma once 'ı kullanarak multiple inclusion guard 'ın otomatik oluşturulmasını sağlarız.
örneğin;

#pragma  once                                                                            #ifndef  ALI_H
struct Date {                                                                            #define  ALI_H
  int d, m, y;          <---Yandaki gibi çoklu çağırmaya karşı koruma altına alır--->    struct Date {
};                                                                                           int d, m, y; 
                                                                                         };

-> Avantajı yazım pratiği kazandırması.
-> Endüstride kullanmak önerilmez, derleyiciler tanısada %100 standart değil.

KURAL : nutility isminde modül oluşturalım. (nutility.c ve nutility.h dosyaları). Bu modül sık kullandığımız fonksiyonları içersin.







































































